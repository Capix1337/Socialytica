datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum UserRole {
  ADMIN
  MODERATOR
  USER
  GUEST
}

enum AccountType {
  GOOGLE
  FACEBOOK
  EMAIL
}

model User {
  id                String      @id @default(cuid())
  name              String?
  email             String      @unique
  emailVerified     DateTime?
  image             String?
  password          String?     // For email/password auth
  role              UserRole    @default(USER)
  accounts          Account[]
  profile           UserProfile?
  twoFactorEnabled  Boolean     @default(false)
  twoFactorSecret   String?
  loginAttempts     Int         @default(0)
  lastLogin         DateTime?
  accountLocked     Boolean     @default(false)
  isActive          Boolean     @default(true)
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt

  @@index([email])
}

model Account {
  id                 String      @id @default(cuid())
  userId             String
  type               AccountType
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  user               User        @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model UserProfile {
  id        String   @id @default(cuid())
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  firstName String?
  lastName  String?
  bio       String?
  location  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@index([identifier])
}