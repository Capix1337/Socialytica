datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  ADMIN
  MODERATOR
  USER
  GUEST
}

enum AccountType {
  EMAIL
  GOOGLE
  GITHUB
}

model User {
  id            String      @id @default(cuid())
  email         String      @unique
  name          String?
  emailVerified DateTime?
  image         String?
  password      String?     // Hashed password
  
  role          Role        @default(USER)
  accountType   AccountType @default(EMAIL)

  // Social Accounts
  socialAccounts SocialAccount[]

  // 2FA and Security
  twoFactorEnabled Boolean   @default(false)
  twoFactorSecret  String?
  recoveryCode     String?

  // Tracking
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  lastLogin     DateTime?

  // Tokens and Sessions
  accounts      Account[]
  sessions      Session[]
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model SocialAccount {
  id             String   @id @default(cuid())
  userId         String
  provider       String
  providerUserId String
  accessToken    String?
  refreshToken   String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerUserId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}