// prisma/schema.prisma
datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          String    @id @default(uuid()) @map("_id")
  email       String    @unique
  firstName   String?   @default("")
  lastName    String?   @default("")
  imageUrl    String?   @default("")
  clerkUserId String    @unique
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  Test Test[]
}

model Test {
  id          String      @id @default(uuid())
  title       String
  description String?
  isPublished Boolean     @default(false)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  createdBy   String
  user        User        @relation(fields: [createdBy], references: [id])
  questions   Question[]
  categories  Category[] 

  @@index([createdBy])
}

model Category {
  id          String    @id @default(cuid())
  name        String
  description String?
  scale       Int
  testId      String    
  test        Test      @relation(fields: [testId], references: [id], onDelete: Cascade)
  questions   Question[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([testId])
}

model Question {
  id         String    @id @default(cuid())
  title      String
  testId     String
  test       Test      @relation(fields: [testId], references: [id], onDelete: Cascade)
  categoryId String?
  category   Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull)
  options    Option[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  @@index([testId])
  @@index([categoryId])
}

model Option {
  id         String   @id @default(cuid())
  text       String
  point      Int
  questionId String
  question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([questionId])
}